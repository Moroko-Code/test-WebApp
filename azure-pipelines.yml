trigger:
- master

variables:
  azureServiceConnectionId: '86a120ef-5973-426f-a6b3-97b372ecae4e'
  webAppName: 'test-WebApp'
  poolName: 'web'  # Your self-hosted agent pool
  environmentName: 'test-WebApp'
  projectRoot: $(System.DefaultWorkingDirectory)
  pythonVersion: '3.11'

stages:
- stage: Build
  displayName: Build the Python app
  jobs:
  - job: BuildJob
    displayName: 'Build and package'
    pool:
      name: $(poolName)
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Set Python version $(pythonVersion)'

    # Install dependencies in virtual environment (Windows)
    - task: CmdLine@2
      displayName: 'Install dependencies'
      inputs:
        script: |
          python -m venv antenv
          call antenv\Scripts\activate.bat
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      workingDirectory: $(projectRoot)

    # Run tests inside virtual environment (Windows)
    - task: CmdLine@2
      displayName: 'Run tests'
      inputs:
        script: |
          call antenv\Scripts\activate.bat
          pip install pytest pytest-azurepipelines
          pytest
      workingDirectory: $(projectRoot)

    # Archive build artifacts
    - task: ArchiveFiles@2
      displayName: 'Archive build files'
      inputs:
        rootFolderOrFile: '$(projectRoot)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true

    # Publish artifact
    - publish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
      displayName: 'Publish build artifact'
      artifact: drop

- stage: Deploy
  displayName: 'Deploy to Azure Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployJob
    displayName: 'Deploy to Azure Web App'
    pool:
      name: $(poolName)
    environment: $(environmentName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '$(pythonVersion)'
            displayName: 'Set Python version for deployment'

          - task: AzureWebApp@1
            displayName: 'Deploy to Azure Web App: $(webAppName)'
            inputs:
              azureSubscription: $(azureServiceConnectionId)
              appName: $(webAppName)
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
