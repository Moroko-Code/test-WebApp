trigger:
- master

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureServiceConnectionId: '86a120ef-5973-426f-a6b3-97b372ecae4e'

  # Web app name
  webAppName: 'test-WebApp'

  # Agent pool name (self-hosted or hosted)
  poolName: 'web'

  # Environment name
  environmentName: 'test-WebApp'

  # Project root (default working directory)
  projectRoot: '$(System.DefaultWorkingDirectory)'

  # Python version
  pythonVersion: '3.11'

stages:
# =============================
#  BUILD STAGE
# =============================
- stage: Build
  displayName: 'Build the Python App'
  jobs:
  - job: BuildJob
    displayName: 'Build and Package'
    pool:
      name: $(poolName)
    steps:
    # 1️⃣ Use Python
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
      displayName: 'Set Python version $(pythonVersion)'

    # 2️⃣ Install dependencies
    - task: CmdLine@2
      displayName: 'Install dependencies'
      inputs:
        script: |
          cd $(projectRoot)
          if exist antenv rmdir /s /q antenv
          python -m venv antenv
          call antenv\Scripts\activate.bat
          python -m pip install --upgrade pip
          pip install -r requirements.txt

    # 3️⃣ Run tests (ignore failure if none found)
    - task: CmdLine@2
      displayName: 'Run tests'
      continueOnError: true
      inputs:
        script: |
          cd $(projectRoot)
          call antenv\Scripts\activate.bat
          python -m pip install pytest pytest-azurepipelines
          python -m pytest tests --junitxml=test-output.xml

    # 4️⃣ Archive build files
    - task: ArchiveFiles@2
      displayName: 'Archive build files'
      inputs:
        rootFolderOrFile: '$(projectRoot)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    # 5️⃣ Publish build artifacts
    - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'Publish build artifact'
      artifact: drop

# =============================
#  DEPLOY STAGE
# =============================
- stage: Deploy
  displayName: 'Deploy to Azure Web App'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployJob
    displayName: 'Deploy to Azure Web App'
    pool:
      name: $(poolName)
    environment: $(environmentName)
    strategy:
      runOnce:
        deploy:
          steps:
          # 1️⃣ Use same Python version
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '$(pythonVersion)'
            displayName: 'Set Python version for deployment'

          # 2️⃣ Deploy package to Azure Web App
          - task: AzureWebApp@1
            displayName: 'Deploy to Azure Web App: $(webAppName)'
            inputs:
              azureSubscription: $(azureServiceConnectionId)
              appName: $(webAppName)
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
